<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- 启动注解驱动的springMVC功能[建议加上] declares support for general annotations such as @Required, @Autowired, @PostConstruct, and so on. -->
	<context:annotation-config/>
	
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数[可选] -->
	<!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。即解决了@Controller注解的使用前提配置 -->
	<!-- is actually rather pointless. It declares explicit support for annotation-driven MVC controllers (i.e.@RequestMapping, @Controller, etc), even though support for those is the default behaviour. -->
	<mvc:annotation-driven/>
	
	<!-- 扫描所有的controller -->
	<context:component-scan base-package="com.shuzheng.ssm.controller"/>
	
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理 -->
	<mvc:resources mapping="/resources/**" location="/resources/"/>
	
	<!-- 视图 -->
	<!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 顺序优先级 -->
		<property name="order" value="1" />
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json 默认：true -->
		<property name= "favorPathExtension" value= "true" />
		<!-- 参数用于开启 /userinfo/123?format=json 的支持 -->
		<property name= "favorParameter" value="true"/>
		<property name= "parameterName" value="format"/>
		<!-- 是否忽略Accept Header -->
		<property name= "ignoreAcceptHeader" value="false"/>
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json"/>
				<entry key="xml" value="application/xml"/>
				<entry key="html" value="text/html"/>
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<!-- 支持jsonp，访问如http://localhost:8080/json?callback=callback即可得到JSONP响应：callback({"user":{"id":1,"name":"zhangsan"}}); -->
					<property name="jsonpParameterNames">
						<set>
							<value>jsonp</value>
							<value>callback</value>
						</set>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- i18n国际化
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang"/>
	</bean>
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="zh_CN"/>
	</bean> -->
	
	<!-- 启用基于注解的处理器映射，添加拦截器，类级别的处理器映射 -->
	<!-- 
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="localeChangeInterceptor"/>
			</list>
		</property>
	</bean>
	 -->
	
	<!--200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="209715200" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="resolveLazily" value="true" />
	</bean>
	
</beans>